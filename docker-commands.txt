Buildar dockerfile (ex) : 
  	FROM node:12-alpine
	RUN apk add --no-cache python g++ make
	WORKDIR /app
	COPY . .
	RUN yarn install --production
	CMD ["node", "src/index.js"]

Buildar imagem container: 
	docker build -t getting-started .

Iniciar container: 
	docker run -dp 3000:3000 getting-started

Verificar containers online:
	docker ps

Parar container por id:
	docker stop <the-container-id>

Remover container: 
	docker rm <the-container-id>

Parar e remover container: 
	docker rm -f <the-container-id>

Verificar imagens docker: 
	docker image ls

Tagar repo para compartilhar docker:
	docker tag getting-started YOUR-USER-NAME/getting-started

Compartilhar docker:
	docker push YOUR-USER-NAME/getting-started

Criar um container ubuntu que criara um arquivo nomeado /data.txt com um numero aleatorio:
	docker run -d ubuntu bash -c "shuf -i 1-10000 -n 1 -o /data.txt && tail -f /dev/null"
	docker exec <container-id> cat /data.txt
	docker run -it ubuntu ls /

Criar volume docker:
	docker volume create todo-db

Criar container com volume:
	docker run -dp 3000:3000 -v todo-db:/etc/todos getting-started

Verificar config volume:
	docker volume inspect todo-db

Container em modo dev: 
	docker run -dp 3000:3000 `
    -w /app -v "$(pwd):/app" `
    node:12-alpine `
    sh -c "yarn install && yarn run dev"

Container logs
	docker logs -f <container-id>

Criar container com network
	docker network create todo-app

Come√ßar com docker compose
	docker-compose up -d

